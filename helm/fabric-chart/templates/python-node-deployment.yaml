apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fabric-chart.fullname" . }}-python-node
  labels:
    {{- include "fabric-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: python-node
spec:
  replicas: {{ .Values.replicaCount.pythonNode }}
  selector:
    matchLabels:
      {{- include "fabric-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: python-node
  template:
    metadata:
      labels:
        {{- include "fabric-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: python-node
    spec:
      containers:
        - name: {{ .Chart.Name }}-python-node
          image: "{{ .Values.pythonNode.image.repository }}:{{ .Values.pythonNode.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pythonNode.image.pullPolicy }}
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: RUST_LOG
              value: "info"
            - name: QUADCOPTER_ID
              value: {{ printf "python-quadcopter-%s" (randAlphaNum 8 | lower) | quote }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "export QUADCOPTER_ID=quadcopter-python-$(hostname | cut -d'-' -f3-)"]
          ports:
            - name: http
              containerPort: 7447
              protocol: TCP
          resources:
            {{- toYaml .Values.pythonNode.resources | nindent 12 }}
