name: CI / CD

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  rust-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        run: |
          rustup toolchain install stable --profile minimal
          rustup component add rustfmt clippy
          sudo apt-get update && sudo apt-get install -y lld

      - name: Format Rust code
        run: cargo fmt --all -- --check
        working-directory: ./rust/fabric

      - name: Lint Rust code
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: ./rust/fabric

      - name: Build Rust library
        run: cargo build --verbose
        working-directory: ./rust/fabric

      - name: Run Rust tests
        run: cargo test --verbose
        working-directory: ./rust/fabric

      - name: Build and test examples
        run: |
          for example in rust/examples/*; do
            if [ -d "$example" ]; then
              echo "Building and testing $example"
              cd "$example"
              cargo build --verbose
              cargo test --verbose
              cd -
            fi
          done

  python-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest pytest-asyncio
          pip install -r python/sensor_node/requirements.txt
          pip install -r python/control_node/requirements.txt

      - name: Lint Python code
        run: ruff check .
        working-directory: ./python

      - name: Run Python tests
        run: pytest
        working-directory: ./python
